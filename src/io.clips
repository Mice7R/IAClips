;/* vim: set ff=unix ts=4 sw=2 tw=0 et syntax=clips :*/
;--------------------------------------------------
; IO
;--------------------------------------------------
(deffunction pregunta (?p $?permesos)
  (printout t ?p " " (implode$ ?permesos) " ")
  (bind ?r (read))
  (if (lexemep ?r) then (bind ?r (lowcase ?r)))
  (while (not (member ?r ?permesos)) do
    (printout t ?p " " (implode$ ?permesos) " ")
    (bind ?r (read))
    (if (lexemep ?r) then (bind ?r (lowcase ?r)))
  )
?r)

(deffunction pregunta-si-no (?p)
  (bind ?r (pregunta ?p si no s n))
  (if (or (eq ?r si) (eq ?r s)) then TRUE else FALSE)
)

(deffunction pregunta-num (?p)
  (printout t ?p)
  (bind ?r (read))
  (while (or (not (integerp ?r)) (< ?r 0)) do
    (printout t ?p)
    (bind ?r (read))
  )
?r)

(deffunction true () TRUE)
(deffunction print-status (?a ?b ?c)
    (format t "Aceptados: %s %r%n" (implode$ ?a))
    (format t "Negados: %s %r%n" (implode$ ?b))
    (format t "Normales: %s %r%n" (implode$ ?c)))

(deffunction get-instance-by-nombre (?class ?value)
  (nth$ 1 (find-instance ((?a ?class)) (eq ?a:nombre ?value))))
(deffunction get-ALL-instances (?class)
  (find-all-instances ((?g ?class)) (true)))
(deffunction delete-first-char (?string)
    (sub-string 2 (str-length ?string) ?string))

(deffunction fav (?class)
  (bind ?generos (get-ALL-instances ?class))
  (format t "Algun %s preferido? %r%n" ?class)
  (format t "Acpetados representa aquellos a los que se daran preferencia.%r%nLos Negados estan excluidos de la busqueda.%r%nEscribe el nombre de un %s para aceptarlo, escribe !nombre para negarlo.%r%nEscribe . para terminar.%r%n" ?class)
  
  (bind ?aceptar (create$))
  (bind ?negar (create$))
  (bind ?continue TRUE)
  (while ?continue do
    (print-status ?aceptar ?negar ?generos)
    (bind ?R (readline))
    (if (eq FALSE (str-index "!" ?R)) then 
      (bind ?r (get-instance-by-nombre ?class ?R)) 
      (bind ?rmem (member$ ?r ?generos))
      (if ?rmem then (bind ?generos (delete$ ?generos ?rmem ?rmem)) 
        (bind ?aceptar (insert$ ?aceptar 1 ?r)))
    else (bind ?R (delete-first-char ?R))
      (bind ?r (get-instance-by-nombre ?class ?R)) 
      (bind ?rmem (member$ ?r ?generos))
      (if ?rmem then (bind ?generos (delete$ ?generos ?rmem ?rmem)) 
        (bind ?negar (insert$ ?negar 1 ?r)))
    )
    (bind ?continue (and (> (length$ ?generos) 0) (neq "." ?R)))
  )
; Poner los asserts
  (while (> (length$ ?aceptar) 0) do (assert (modder (q ?class) (o (nth$ 1 ?aceptar)) (m 2.0))) (bind ?aceptar (delete$ ?aceptar 1 1)))
  (while (> (length$ ?negar) 0) do (assert (modder (q ?class) (o (nth$ 1 ?negar)) (m 0.0))) (bind ?negar (delete$ ?negar 1 1)))
)
